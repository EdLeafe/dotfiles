ngc registry image list 'nvidia/shobin-test/nginx:*' --debug
rg 'api\.stg' config_folder/
rg 'stg\.api' config_folder/
open config_folder
ll *sh
vim stg_switch.sh 
prod
set | grep NGC
stg
cdn
canary
prod
stg
cdn
rg pudb nn/ tests/
cd ~
cd projects/wayback/
pr wb.py 
poetry run wb.py 
poetry run python
poetry add wayback==0.4.1
rmvenv wayback-HQdskqF3-py3.9 
rm poetry.lock 
rm pyproject.toml 
poetry init
poetry install
prp
poetry install urllib3
poetry add urllib3
poetry remove urllib3 >=3.0
poetry add urllib3 >=3.0
poetry add urllib3 >='3.0'
poetry add urllib3 =="1.26.16"
poetry remove urllib3
poetry add urllib3 =="1.26.15"
poetry add urllib3 < "2.0.0"
poetry add urllib3 <= "2.0.0"
poetry add urllib3<"2.0.0"
poetry add urllib3<2.0.0
poetry add urllib3==1.26.15
poetry show
poetry add wayback
poetry shell
ipython
vim cred.txt 
poetry add beautifulsoup4
open cred.txt 
rg -l sqlite3 ..
rg -li 'create table' ..
fg
ll 
mkdir out
ri
pri
ll out | wc -l
prp wb.py 
cd ; vim ~
cd projects/wayback/
vim .
ipython
./wordle.py 's.oN.' 'n' te
./wordle.py 's.orn' '' tew
nettop --help
nettop
nettop | rg 8282
./wordle.py '....E' 'e' ston
./wordle.py '..E.[RE]' 'er' stoncla
./wordle.py 'Frief' '' stonclad
launchctl unload /Library/LaunchAgents/at.obdev.littlesnitch.agent.plist
ipfw
pf
pfctl
ess
screen -c .SDK.screenrc 
screen -dr SDK
screen -c .CLI.screenrc 
ssh kitchenpi
screen -dr CLI
vim halflife.py
python halflife.py 10
python halflife.py 100
python halflife.py 10 5
python halflife.py 100 10
python halflife.py 60 100
python halflife.py 60 1000
fg
./wordle.py '..E.[RE]' 'er' stoncla
./wordle.py 'Frief' '' stonclad
launchctl unload /Library/LaunchAgents/at.obdev.littlesnitch.agent.plist
ipfw
pf
pfctl
brew search colima
./wordle.py 'S.as.' '' tonechr
./wordle.py 'S.as.' 's' tonechr
ldd $(which bash)
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
mss
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
cd ~/projects/ngc-cli
/mv
ngc registry image info nvidia/nginx2:sig-test
ngc registry image info nvidia/nginx2:sig-test --debug
ngc registry image list '*test_repo*'
rg signedImages nn/data/
rg signedImages ngc-registry/
rg signedImages ngc-search/
rg -i filter nn/data/
fd ParamFilter
fd Param
fd Param nn/data/
fd ParamFilter nn/
ngc registry image list '*ceph*'
rg 'arguments.+bool' nn/modules/
rg 'arguments.+default' nn/modules/
rg store_true nn/modules/
ngc registry image list nvidia/nginx2:* --signed
ngc registry image list '*cuda*' 
ngc registry image list '*cuda*' --signed
ngc registry image list '*cuda*' --signed --org nvidia
ngc registry image list '*nginx*' 
git diffn main
git sw -c feat/filter_signed
git add ngc-cas/
h 'image list'
ngc registry image list nvidia/nginx2:* --debug
ngc registry image list nvidia/cuda:* 
ngc registry image list nvidia/cuda:9.2* 
ngc registry image list nvidia/cuda* --signed
ngc registry image list nvidia/cuda* 
ngc registry image list nvidia/cuda:9.2* --signed --debug
ngc registry image list *cuda*:9.2* --signed --debug
rg -l glob nn/
rg '\bglob\b' nn/
rg 'glob\b' nn/
h 'image info'
ngc registry image info nvidia/nginx2 
ngc registry image info nvidia/nginx2 --debug
ngc registry image list nvidia/cuda:9.2* --signed
ngc registry image list nvidia/cuda:9.2-runtime-ubuntu16.04
ngc registry image list nvidia/cud*
ngc registry image list --help
time ngc registry image list nvidia/cuda:9.2*
time ngc registry image list nvidia/cuda:9.1*
ngc registry image list nvidia/cuda:9.1*
canary
ngc registry image list nvidian/mpicuda:*
ngc registry image list nvidia/l4t-cuda:run*
rg 'stg\.api' nn/
rg 'api\.stg' nn/
ngc registry image list nvidia/l4t-cuda:*run*
ngc registry image list nvidia/l4t-cuda:*run* --signed
ngc registry image list nvidia/l4t-cuda:*run* 
ngc registry image list nvidia/l4t-cuda:* --signed
ngc registry image list 'nvidia/nginx:*'
ngc registry image list 'nvidia/nginx2:*'
ngc registry image list 'nvidia/ngc-web/nginx:*'
ngc registry image list 'nvidia/shobin-test/*
ngc registry image list 'nvidia/shobin-test/*'
ngc registry image info nvidia/shobin-test/nginx
ngc registry image info nvidia/shobin-test/nginx:sig-test
ngc registry image list 'nvidia/shobin-test/nginx:*'
ngc registry image info nvidia/shobin-test/nginx:signing-test --debug
rg 'api\.stg' config_folder/
rg 'stg\.api' config_folder/
open config_folder
ll *sh
vim stg_switch.sh 
set | grep NGC
canary
cdn
h cuda
ngc registry image list nvidia/l4t-cuda:*
ngc registry image list '*cuda*'
export NGC_CLI_RICH_OUTPUT=1
ngc registry image list nvidia/cuda:9.2*
ngc registry image list nvidia/cuda:*
ngc registry image list nvidia/cuda:* -- signed
ngc registry image list nvidia/cuda:* --signed
ngc registry image info nvidia/cuda:latest
ngc registry image info nvidia/cuda:latest --debug
ngc registry image list nvidia/l4t-cuda:* --debug
ngc registry image list 'nvidia/shobin-test/nginx:*' --debug
ngc registry image list nvidia/shobin-test/testnosignnginx:*
ngc registry image list nvidia/nginx2:*
ngc registry image list nvidia/nginx:*
ngc registry image list nvidia/shobin-test/nginx:* --signed --debug
ngc registry image info nvidia/shobin-test/nginx --debug
ngc registry image info nvidia/shobin-test/nginx:sig-test --debug
ngc registry image info nvidia/shobin-test/nginx:1.24.0 --debug
git sw feat/pym/rename 
git diff main
ngc registry image list '*nginx*' --signed
ngc registry image list  --signed
ngc registry image list '*' --signed --debug
git sw feat/is_signed 
git diffn feat/filter_signed 
git co feat/filter_signed -- ngccli/nvPrettyPrint.py
git diff feat/filter_signed -- ngccli/printer/image.py
git co feat/filter_signed -- ngccli/printer/image.py
git rebase feat/is_signed 
git rebase --continue
clear
ngc registry image list 
ngc registry image list '*'
ngc registry image list '*' --signed
ngc registry image list nvidia/shobin-test/nginx:*
ngc registry image list nvidia/shobin-test/nginx:* --signed
ngc registry image pull nvidian/mynginx-test
git diffn main > DIFFN
prt tests/unit/modules/test_image
ngc registry image list '*test*' --column name
prt tests/unit/modules/test_image.py::test_list_columns
prt tests/unit/printer/test_image.py
prt tests/unit/printer/test_image.py::test_print_image_list_columns_signed
rg JobStat nn/data/
rg -l JobStatusEnum nn/data/
rg -l KILLED_BY_USER 
cd ngc-cas/
git co 1c08d484
git co v1.156.1
prt tests/unit/test_constants.py 
prt tests/unit/printer/test_ace.py
git push -u origin feat/is_signed 
git br -d feat/is_signed 
git br -D feat/is_signed 
git co stg-v3.44.5
git reflog
git reflog | rg -i lightstep
git reflog | rg -i warning
git co ec6e9470
git diff @^
cd ngc-cas
prt tests/unit/test_constants.py::test_job_states
git sw feat/filter_signed 
cd -
prt tests/unit/api/test_search.py::test_search_resource
ngc registry image publickey
ngc registry image list '*:*'
prt tests/unit/modules/test_image.py::test_list_calls_search
rg pudb nn/ tests/
git commit -a --amend --no-edit 
pri
python
[A
rg -l pkg_resources
prt tests/unit/modules/test_image.py::test_filter_images
git commit -a --amend
git push -u origin feat/filter_signed i
git push -u origin feat/filter_signed 
ngc registry image list -h
ngc registry image info -h
ngc registry image list '*test*'
ngc registry image info nvidian/cuda_test:0.1.0 --scan
ngc registry image list '*nginx*'
ngc registry image info nvidian/forge/nginx --scan
ngc registry image info nvidian/swdl/nginxplus --scan
ngc registry image list '*nginx*' --org nvidia
ngc registry image info nvidia/cuda --scan
ngc registry image list '*cuda*' --org nvidia
ngc registry image info nvidia/l4t-cuda --scan
ngc registry image pullnvidia/l4t-cuda --scan
ngc registry image pull nvidia/l4t-cuda --scan
ngc registry image pull nvidia/l4t-cuda:11.4.19-devel --scan
ngc registry image pull nvidia/l4t-cuda:11.4.19-devel --scan scanout.txt
vim scanout.txt 
rm -f scanout.txt 
git brs
git br -d feat/filter_signed 
git br feat/image/sign-publish
git sw -c feat/image/sign-publish
rg PublishingReq
cd ngc-publishing-service/
git fetch
git co v1.5.0
b
git add ngc-publishing-service/
./build.sh 
stg
ngc registry image list '*todds*'
ngc registry image publish --source nvidia/todds_team/nginx:1.24-bullseye-perl nvidia/test_team/nginxb:1.24-bullseye-perl --sign
git diff
pr black --preview nn/ tests/
prt tests/unit/modules/test_image.py 
prt tests/unit/modules/test_publish.py 
prt tests/unit/api/test_publish.py 
poetry run tox --parallel auto > OUT
git reset b790b416
git sw feat/image/sign-publish 
gs
git commit -a -m "feat(image): Add option to sign image when publishing"
git ls
git sw main
git pull
git rebase main
git push -u origin feat/image/sign-publish 
git sw -
ngc registry image publish -h
prod
ngc registry resource info nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry resource model nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry model info nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry model list '*sw_update*'
ngc registry resource list '*sw_update*'
ngc registry image list '*sw_update*'
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
mss
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
ll
ll autoload/
ll black/
ll plugged/
cd -
cd ~/.vim
rm -rf black/
rm -f autoload/plug.vim 
rm -rf plugged/*
ping -c 3 google.com
cd ~/projects/ngc-cli; vim .
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
screen -c .SDK.screenrc 
screen -c .CLI.screenrc 
screen -dr 11165
ess
ssh leafe.com
cd projects/
mkdir wayback
cd wayback/
poetry init
poetry install
cd ~
screen
screen -ls
screen -dr 21489
screen -dr CLI
poetry install
ngc registry image list '*ngin*' 
git commit -a --amend --no-edit 
cd ~/projects/ngcsdk; vim .
vim -p nn/data/registry/Repository*
cd ~/projects/ngc-cli; vim .
sudo su -
mss
cat projects/finance/constants.py 
brew search colima
brew install colima
colilma
colima
colima start
colima list
colima image list
colima list images
colilma stop
colima stop
brew uninstall colima
brew search podman
brew uninstall podman
brew install podman
brew cleanup podmam
brew cleanup podman
brew uninstall podman-desktop
brew install podman-desktop
podman machine -h
podman machine lsit
podman machine list
podman machine rm podman-machine-default
podman machine init
podman machine start
podman -h
podman images
docker
podman
pss pyth
cd ~/projects/ngcsdk
git sw -c fix/telemetryport
git commit -a -m "fix: don't block when opentelemetry port is not available"
pr git commit -a -m "fix: don't block when opentelemetry port is not available"
pri
prt tests/unit/test_utils.py 
pr git commit -a --amend --no-edit 
git sw main
git merge fix/telemetryport 
git remote -v
git push 
git push -u leafe main
git br -d fix/telemetryport 
cd ~/projects/ngcsdk; vim .
cd projects/mailman_held_messages/
clear && prp xasync.py 
screen -ls
screen -dr SDK
pfctl
brew search colima
./wordle.py 'S.as.' '' tonechr
./wordle.py 'S.as.' 's' tonechr
ldd $(which bash)
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim
./wordle.py 
./wordle.py '.t.RE' 're' sa
./wordle.py '.t.er' '' saoh
./wordle.py '..A.E.' 'ae' str
./wordle.py '..A.E' 'ae' str
./wordle.py 'LaAeE' 'l' strdn
ess
./wordle.py 's...e' '' tar
./wordle.py 's.ine' '' tarp
./wordle.py '..ARE' 'are' st
./wordle.py 'rEA[RA]E' 'ae' stgl
./wordle.py 's....' '' tare
./wordle.py 'sP.I.' 'pi' tareol
ping -c 3 google.com
mss
./wordle.py 'S...e' 's' art
./wordle.py 'Souse' '' artl
./wordle.py '....E' 'e' star
./wordle.py '.L.e[NE]' 'ln' starod
vim dict_wordle.txt 
wc -l dict_wordle.txt 
sudo su -
screen -dr SDK
./wordle.py '..A.E.' 'ae' str
./wordle.py '..A.E' 'ae' str
./wordle.py 'LaAeE' 'l' strdn
./wordle.py 's...e' '' tar
./wordle.py 's.ine' '' tarp
./wordle.py '..ARE' 'are' st
./wordle.py 'rEA[RA]E' 'ae' stgl
./wordle.py 's....' '' tare
./wordle.py 'sP.I.' 'pi' tareol
ping -c 3 google.com
./wordle.py 'S...e' 's' art
./wordle.py 'Souse' '' artl
./wordle.py '....E' 'e' star
./wordle.py '.L.e[NE]' 'ln' starod
vim dict_wordle.txt 
wc -l dict_wordle.txt 
screen -c .CLI.screenrc 
ll projects/
cd projects/prompt/
vim junk.py 
prp junk.py 
ssh kitchenpi
fg
mss
screen 
screen -ls
cat ~/Library/LaunchAgents/com.ed.lotto.plist 
cd /Users/ed/projects/tools; source /Users/ed/venvs/basic/bin/activate; python lotto_check.py `cat /Users/ed/.lotto_numbers` ; deactivate; open -g /Users/ed/lotto_results.html
mkdir openapiflask
mkvenv openapi
git clone git@github.com:EdLeafe/photoviewer.git
vim ~/.ssh/known_hosts
git clone git@github.com:riddhi89/simple-flask-project.git
cd simple-flask-project/
ll
workon openapi 
pip install -r requirements.txt 
python generate_openapi_spec.py 
vim generate_openapi_spec.py 
deactivate 
rmvenv openapi 
rm -rf simple-flask-project/
mkdir openflask
ll op*
rm -rf openflask/
cd openapiflask/
poetry init
poetry install
ipython
poetgry add apispec_webframeworks
poetry add apispec_webframeworks
poetry run ipython
rmvenv openapiflask-5ETorLrC-py3.9 
b
rm -rf openapiflask/
ess
screen -dr SDK
screen -dr CLI
pss pyte
kill 93031
. /Users/ed/.cache/virtualenvs/ngccli-hHOsXGyD-py3.9/bin/activate
python -m rich.spinner
python -m rich.spinner
prp wb.py 
cd ; vim ~
cd projects/wayback/
vim .
ipython
./wordle.py 's.oN.' 'n' te
./wordle.py 's.orn' '' tew
nettop --help
nettop
nettop | rg 8282
./wordle.py '....E' 'e' ston
./wordle.py '..E.[RE]' 'er' stoncla
./wordle.py 'Frief' '' stonclad
launchctl unload /Library/LaunchAgents/at.obdev.littlesnitch.agent.plist
ipfw
pf
pfctl
ess
screen -c .SDK.screenrc 
screen -dr SDK
screen -c .CLI.screenrc 
ssh kitchenpi
screen -dr CLI
vim halflife.py
python halflife.py 10
python halflife.py 100
python halflife.py 10 5
python halflife.py 100 10
python halflife.py 60 100
python halflife.py 60 1000
./wordle.py '..E.[RE]' 'er' stoncla
./wordle.py 'Frief' '' stonclad
launchctl unload /Library/LaunchAgents/at.obdev.littlesnitch.agent.plist
ipfw
pf
pfctl
brew search colima
./wordle.py 'S.as.' '' tonechr
./wordle.py 'S.as.' 's' tonechr
ldd $(which bash)
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
mss
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
/mv
ngc registry image info nvidia/nginx2:sig-test
ngc registry image info nvidia/nginx2:sig-test --debug
ngc registry image list '*test_repo*'
rg signedImages nn/data/
rg signedImages ngc-registry/
rg signedImages ngc-search/
rg -i filter nn/data/
fd ParamFilter
fd Param
fd Param nn/data/
fd ParamFilter nn/
ngc registry image list '*ceph*'
rg 'arguments.+bool' nn/modules/
rg 'arguments.+default' nn/modules/
rg store_true nn/modules/
ngc registry image list nvidia/nginx2:* --signed
ngc registry image list '*cuda*' 
ngc registry image list '*cuda*' --signed
ngc registry image list '*cuda*' --signed --org nvidia
ngc registry image list '*nginx*' 
git sw -c feat/filter_signed
git add ngc-cas/
ngc registry image list nvidia/nginx2:* --debug
ngc registry image list nvidia/cuda:* 
ngc registry image list nvidia/cuda:9.2* 
ngc registry image list nvidia/cuda* --signed
ngc registry image list nvidia/cuda* 
ngc registry image list nvidia/cuda:9.2* --signed --debug
ngc registry image list *cuda*:9.2* --signed --debug
rg -l glob nn/
rg '\bglob\b' nn/
rg 'glob\b' nn/
h 'image info'
ngc registry image info nvidia/nginx2 
ngc registry image info nvidia/nginx2 --debug
ngc registry image list nvidia/cuda:9.2* --signed
ngc registry image list nvidia/cuda:9.2-runtime-ubuntu16.04
ngc registry image list nvidia/cud*
time ngc registry image list nvidia/cuda:9.2*
time ngc registry image list nvidia/cuda:9.1*
ngc registry image list nvidia/cuda:9.1*
ngc registry image list nvidian/mpicuda:*
ngc registry image list nvidia/l4t-cuda:run*
rg 'stg\.api' nn/
rg 'api\.stg' nn/
ngc registry image list nvidia/l4t-cuda:*run*
ngc registry image list nvidia/l4t-cuda:*run* --signed
ngc registry image list nvidia/l4t-cuda:*run* 
ngc registry image list nvidia/l4t-cuda:* --signed
ngc registry image list 'nvidia/nginx:*'
ngc registry image list 'nvidia/nginx2:*'
ngc registry image list 'nvidia/ngc-web/nginx:*'
ngc registry image list 'nvidia/shobin-test/*
ngc registry image list 'nvidia/shobin-test/*'
ngc registry image info nvidia/shobin-test/nginx
ngc registry image info nvidia/shobin-test/nginx:sig-test
ngc registry image list 'nvidia/shobin-test/nginx:*'
ngc registry image info nvidia/shobin-test/nginx:signing-test --debug
rg 'api\.stg' config_folder/
rg 'stg\.api' config_folder/
ll *sh
vim stg_switch.sh 
set | grep NGC
cdn
h cuda
ngc registry image list nvidia/l4t-cuda:*
ngc registry image list '*cuda*'
ngc registry image list nvidia/cuda:9.2*
ngc registry image list nvidia/cuda:*
ngc registry image list nvidia/cuda:* -- signed
ngc registry image list nvidia/cuda:* --signed
ngc registry image info nvidia/cuda:latest
ngc registry image info nvidia/cuda:latest --debug
ngc registry image list nvidia/l4t-cuda:* --debug
ngc registry image list 'nvidia/shobin-test/nginx:*' --debug
ngc registry image list nvidia/shobin-test/testnosignnginx:*
ngc registry image list nvidia/nginx2:*
ngc registry image list nvidia/nginx:*
ngc registry image list nvidia/shobin-test/nginx:* --signed --debug
ngc registry image info nvidia/shobin-test/nginx --debug
ngc registry image info nvidia/shobin-test/nginx:sig-test --debug
ngc registry image info nvidia/shobin-test/nginx:1.24.0 --debug
ngc registry image list '*nginx*' --signed
ngc registry image list  --signed
ngc registry image list '*' --signed --debug
git sw feat/is_signed 
git diffn feat/filter_signed 
git co feat/filter_signed -- ngccli/nvPrettyPrint.py
git diff feat/filter_signed -- ngccli/printer/image.py
git co feat/filter_signed -- ngccli/printer/image.py
git rebase feat/is_signed 
git rebase --continue
clear
ngc registry image list '*'
ngc registry image list '*' --signed
ngc registry image list nvidia/shobin-test/nginx:*
ngc registry image list nvidia/shobin-test/nginx:* --signed
ngc registry image pull nvidian/mynginx-test
prt tests/unit/modules/test_image
ngc registry image list '*test*' --column name
prt tests/unit/modules/test_image.py::test_list_columns
prt tests/unit/printer/test_image.py
prt tests/unit/printer/test_image.py::test_print_image_list_columns_signed
rg JobStat nn/data/
rg -l JobStatusEnum nn/data/
rg -l KILLED_BY_USER 
cd ngc-cas/
git co 1c08d484
git co v1.156.1
prt tests/unit/test_constants.py 
prt tests/unit/printer/test_ace.py
git push -u origin feat/is_signed 
git br -d feat/is_signed 
git br -D feat/is_signed 
git co stg-v3.44.5
git reflog
git reflog | rg -i lightstep
git reflog | rg -i warning
git co ec6e9470
git diff @^
cd ngc-cas
prt tests/unit/test_constants.py::test_job_states
git sw feat/filter_signed 
prt tests/unit/api/test_search.py::test_search_resource
ngc registry image publickey
ngc registry image list '*:*'
prt tests/unit/modules/test_image.py::test_list_calls_search
rg pudb nn/ tests/
git commit -a --amend --no-edit 
python
rg -l pkg_resources
prt tests/unit/modules/test_image.py::test_filter_images
git commit -a --amend
git push -u origin feat/filter_signed i
git push -u origin feat/filter_signed 
ngc registry image list -h
ngc registry image info -h
ngc registry image info nvidian/cuda_test:0.1.0 --scan
ngc registry image info nvidian/forge/nginx --scan
ngc registry image info nvidian/swdl/nginxplus --scan
ngc registry image list '*nginx*' --org nvidia
ngc registry image info nvidia/cuda --scan
ngc registry image list '*cuda*' --org nvidia
ngc registry image info nvidia/l4t-cuda --scan
ngc registry image pullnvidia/l4t-cuda --scan
ngc registry image pull nvidia/l4t-cuda --scan
ngc registry image pull nvidia/l4t-cuda:11.4.19-devel --scan
ngc registry image pull nvidia/l4t-cuda:11.4.19-devel --scan scanout.txt
vim scanout.txt 
rm -f scanout.txt 
git br -d feat/filter_signed 
git br feat/image/sign-publish
git sw -c feat/image/sign-publish
rg PublishingReq
cd ngc-publishing-service/
git fetch
git co v1.5.0
git add ngc-publishing-service/
ngc registry image list '*todds*'
ngc registry image publish --source nvidia/todds_team/nginx:1.24-bullseye-perl nvidia/test_team/nginxb:1.24-bullseye-perl --sign
prt tests/unit/modules/test_image.py 
prt tests/unit/modules/test_publish.py 
prt tests/unit/api/test_publish.py 
git reset b790b416
git sw feat/image/sign-publish 
git commit -a -m "feat(image): Add option to sign image when publishing"
git push -u origin feat/image/sign-publish 
ngc registry image publish -h
ngc registry resource info nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry resource model nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry model info nv-drive-internal/drivesw-rel/sw_update_package:23.3.2_ED2
ngc registry model list '*sw_update*'
ngc registry resource list '*sw_update*'
ngc registry image list '*sw_update*'
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
mss
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
ll
ll autoload/
ll black/
ll plugged/
cd ~/.vim
rm -f autoload/plug.vim 
rm -rf plugged/*
ping -c 3 google.com
cd ~/projects/ngc-cli; vim .
./wordle.py '.OO.L' 'ol' stnerya
vim dict_wordle.txt 
wc -l dict_wordle.txt 
vim
screen -c .SDK.screenrc 
screen -c .CLI.screenrc 
screen -dr 11165
ess
ssh leafe.com
cd projects/
mkdir wayback
cd wayback/
poetry init
poetry install
cd ~
screen
screen -ls
screen -dr 21489
screen -dr CLI
poetry install
ngc registry image list '*ngin*' 
git commit -a --amend --no-edit 
cd ~/projects/ngcsdk; vim .
vim -p nn/data/registry/Repository*
cd ~/projects/ngc-cli; vim .
sudo su -
mss
cat projects/finance/constants.py 
brew search colima
brew install colima
colilma
colima
colima start
colima list
colima image list
colima list images
colilma stop
colima stop
brew uninstall colima
brew search podman
brew uninstall podman
brew install podman
brew cleanup podmam
brew cleanup podman
brew uninstall podman-desktop
brew install podman-desktop
podman machine -h
podman machine lsit
podman machine list
podman machine rm podman-machine-default
podman machine init
podman machine start
podman -h
podman images
docker
podman
pss pyth
cd ~/projects/ngcsdk
git sw -c fix/telemetryport
git commit -a -m "fix: don't block when opentelemetry port is not available"
pr git commit -a -m "fix: don't block when opentelemetry port is not available"
prt tests/unit/test_utils.py 
git merge fix/telemetryport 
git remote -v
git push 
git push -u leafe main
git br -d fix/telemetryport 
cd ~/projects/ngcsdk; vim .
cd projects/mailman_held_messages/
clear && prp xasync.py 
screen -ls
screen -dr SDK
pfctl
brew search colima
./wordle.py 'S.as.' '' tonechr
./wordle.py 'S.as.' 's' tonechr
ldd $(which bash)
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim
./wordle.py 
./wordle.py '.t.RE' 're' sa
./wordle.py '.t.er' '' saoh
./wordle.py '..A.E.' 'ae' str
./wordle.py '..A.E' 'ae' str
./wordle.py 'LaAeE' 'l' strdn
ess
./wordle.py 's...e' '' tar
./wordle.py 's.ine' '' tarp
./wordle.py '..ARE' 'are' st
./wordle.py 'rEA[RA]E' 'ae' stgl
./wordle.py 's....' '' tare
./wordle.py 'sP.I.' 'pi' tareol
ping -c 3 google.com
mss
./wordle.py 'S...e' 's' art
./wordle.py 'Souse' '' artl
./wordle.py '....E' 'e' star
./wordle.py '.L.e[NE]' 'ln' starod
vim dict_wordle.txt 
wc -l dict_wordle.txt 
cd ~/projects/ngc-cli
git br -d feat/image/sign-publish 
git sw -c feat/download/prod
rg '\bdownload_files\b' nn/
rg '\b_download_files\b' nn/
pr flake8 nn/
rm -rf black/
prt tests/unit/modules/test_model
prt tests/unit/modules/test_model.py 
prt tests/unit/modules/test_resource.py 
git commit -a -m "feat: remove prod feature flag for direct downloads"
git push -u origin feat/download/prod 
mgc registry model list '*ngin*'
ngc registry model list '*ngin*'
ngc registry model list '*ngin*' --org nvidia
ngc registry model list '*cuda*' --org nvidia
ngc registry model list '*ed_*' --org nvidia
export NGC_CLI_RICH_OUTPUT=1
ngc registry model list '*conformer*' --org nvidia
ngc registry model info nvidia/riva/models_asr_conformer_ja_jp
ngc registry model info nvidia/riva/models_asr_conformer_ja_jp_str
ngc registry model list nvidia/riva/models_asr_conformer_ja_jp_str:*
ngc registry model info nvidia/riva/models_asr_conformer_ja_jp_str:2.8.0-tegra-orin
ngc registry model download-version nvidia/riva/models_asr_conformer_ja_jp_str:2.8.0-tegra-orin
rg 'Error getting pagination' nn/
ngc registry model download-version nvidia/riva/models_asr_conformer_ja_jp_str:2.8.0-tegra-orin --debug
ngc registry chart list egxqatest/cal-locked-pytorch:*
ngc registry chart list egxqatest/*
ngc registry chart list 'egxqatest/*'
ngc org list
ngc registry resource create fxx8gv7yq2fg/jz_test051 --application Classification --format dummy --framework TensorFlow --precision FP16 --short-desc "jz_dryrun0530" --debug
ngc registry resource remove -y xh4i5rvcu5mr/jz_test051 --application Classification --format dummy --framework TensorFlow --precision FP16 --short-desc "jz_dryrun0530" --debug
ngc registry resource remove -y xh4i5rvcu5mr/jz_test051
ngc registry resource create xh4i5rvcu5mr/jz_test051 --application Classification --format dummy --framework TensorFlow --precision FP16 --short-desc "jz_dryrun0530" --debug
ngc registry resource remove -y xh4i5rvcu5mr/jz_test051 --debug
rg sign nn/modules/image
rg sign nn/modules/image.py 
h image list
h 'image list'
ngc registry image list '*nginx*'
ngc registry image list --debug
git sw -c fix/image/listall
ngc registry image list
prt tests/unit/modules/test_image.py::test_list
git commit -a -m "fix(image): Fix error when image listing has no target"
git push -u origin fix/image/listall 
ngc registry image list | less
git sw feat/unflag/download 
git diff feat/download/prod 
git br -d fix/image/listall 
git sw feat/pym/rename 
ngc -h
ngc pym project -h
ngc pym project create -h
git br -m feat/pym/internal-rename
git push -u origin feat/pym/internal-rename 
ngc pym -h
ll nn/api/
git sw -c feat/pym/cluster-create
git sw master
git sw v1.10.2
git co v1.10.2
pr isort nn/
pr isort --help
ngc registry image info nvidian/sae/lsjrnnengine
fg
git commit -a -m "feat(pym): added additional params for cluster create"
git br -d feat/pym/internal-rename feat/unflag/download feat/download/prod 
rg allkeys nn/modules/
rg all_keys nn/modules/
prt tests/unit/modules/test_utils.py
git diffn main~`
ngc registry model list nvidia/tao/pretrained_detectnet_v2:darknet19 --format_type json
time ngc registry model list nvidia/tao/pretrained_detectnet_v2:darknet19 --format_type json
prt tests/unit/modules/test_quickstart_cluster.py::test_create
gitls
prt tests/unit/modules/test_quickstart_cluster.py
git co v1.10.3
prt tests/unit/modules/test_quickstart_cluster.py::test_update
ngc registry resource list '*ngc_cli*'
rg OPEN nn/constants.py 
rg -A 3  OPEN nn/constants.py 
prt tests/unit/modules/test_quickstart_cluster.py::test_update > OUT
ngc registry image info nvidia/test/kku-image:0.0.1
ngc registry image info nvidia/test/kku-image:0.0.1 --debug
ngc registry image list nvidia/test/kku-image:*
ngc registry image list '*ngin*'
ngc registry image info nvidia/nginx
git sw -c fix/image/sign
ngc registry image info nvidia/test/kku-image:0.0.1 
prt tests/unit/printer/test_image.py 
prt ngccli/printer/quickstart_project.py
rg -l nworkers nn/data/
rg -l nworkers tests/unit/printer/
rg 'return self.params.nworkers' nn/ tests/
git restore pym-schema/
git restore ngccli/modules/quickstart_project.py ngccli/printer/quickstart_project.py tests/unit/printer/test_quickstart_project.py
git diffn main 
git commit -a -m "fix(image): Add signed status to output for image info"
git push -u origin fix/image/sign 
ngc registry image info nvidia/nginx:sig-test
ngc registry resource download-version "eevaigoeixww/staging/ucf_svc_myservice:0.0.11"
ngc registry resource list '*torch*'
ngc registry resource info nvidian/swdl/se_resnext_for_pytorch
ngc registry resource info nvidian/swdl/se_resnext_for_pytorch:1
ngc registry resource info nvidian/swdl/se_resnext_for_pytorch:1 --files
ngc registry resource download-version nvidian/swdl/se_resnext_for_pytorch:1 --debug
ngc registry resource download-version nvidian/swdl/se_resnext_for_pytorch:1
git br -d fix/image/sign 
git diffn main > DIFFN
git co v1.10.4
git add pym-schema/
prt tests/unit/modules/test_quickstart_cluster.py::test_empty_update
tests/unit/modules/test_quickstart_project.py::test_cluster_create
prt tests/unit/modules/test_quickstart_project.py::test_cluster_create
prt tests/unit/modules/test_quickstart_project.py
prt tests/unit/printer/test_quickstart_project.py::test_print_info_template
prt tests/unit/printer/test_quickstart_project.py
git log
git push -u origin feat/pym/cluster-create 
ngc pym cluster create -h
ngc pym cluster -h
ngc pym cluster --list-instance-types
ngc pym cluster list-instance-types
ngc pym cluster list-instance-types --cluster-type foo
ngc pym cluster list-instance-types --cluster-type dask
ngc ace list
ngc pym cluster list-instance-types --help
git sw -c feat/pym/instance-types
ngc pym cluster list-instance-types --cluster-type dask --ace ngc-stg0-sjc4 --multinode --debug
ngc pym cluster list-instance-types --cluster-type dask --ace ngc-stg0-sjc4 --debug
ngc pym cluster list-instance-types --cluster-type dask --ace ngc-stg0-sjc4
ngc pym cluster list-instance-types --cluster-type dask --ace ngc-stg0-sjc4 --multinode
prt tests/unit/printer/test_quickstart_cluster.py 
prt tests/unit/modules/test_quickstart_cluster.py 
prt tests/unit/api/test_quickstart_cluster.py 
git status pym-schema/
cd py
git tag list
git tag -h
git tag -l
git commit -a -m "feat(pym): Update 'cluster list-instance-types'"
git sw feat/pym/cluster-create 
git submodule update 
cd -
cd pym-schema/
b
git co 3.22
git tag -l | grep 22
git co 3.22.0
git push -u origin feat/pym/instance-types 
ngc pym cluster list-instance-types -h
git tag -l | eg stg
git tag -l | rg stg
git sw -c feat/progbar
prp -m rich.spipnner
poetry shell
git commit -a -m "feat: Control appearance of progress bar"
git sw -c feat/pym/list-templates
poetry show | rg telem
ngc pym project list-templates --default-only --template-type jupyterlab --debug
ngc pym project list-templates --template-type jupyterlab --debug
ngc pym project list-templates --default-only --debug
ngc pym project list-templates --debug
ll tests/unit/modules/
prt tests/unit/modules/test_quickstart_project.py 
git commit -a -m "feat(pym): Updated 'list-templates' API"
git br -d feat/pym/cluster-create 
git br -d feat/pym/instance-types 
git push -u origin feat/pym/list-templates 
./build.sh 
vim -p config_folder/conf*
ll config_folder
ll config_folder/
vim config_folder/meta_data
ngc pym project list-templates --template-type jupyterlab --default-only
ngc pym project list-templates
ngc pym project list-templates --template-type jupyterlab
ngc pym project list-templates --default-only
ngc registry model download-version nvidia/tlt_dashcamnet_mr_test:pruned_v1.0
ngc registry model download-version nvidia/tlt_dashcamnet_mr_test:pruned_v1.0 --debug
git sw -c fix/guest/download
git commit -a -m "fix: allow guest downloads"
git sw feat/pym/list-templates 
git sw feat/pym/list-templates --template-type memo
ngc pym project list-template --template-type memo
prod
ngc pym project list-templates --template-type memo --debug
ngc pym project list-templates --help
ngc pym project list-templates 
prt tests/unit/api/test_quickstart_project.py 
prt tests/unit/api/test_quickstart_project.py::test_list_templates
prt tests/unit/api/test_quickstart_project.py::test_list_templates_bad_type
prt tests/unit/modules/test_quickstart_project.py::test_list_templates
ngc pym project list-templates --template-type memo
ngc pym project list-templates --template-type memoJHJHJH
ngc pym project list-templates --template-type DASk
[A
prt tests/unit/modules/test_quickstart_project.py::test_list_templates_bad_type
pr isort nn/ tests/
h isort
pr isort --skip-glob '*/data/*' nn/
pr isort tests/unit/modules/test_quickstart_project.py 
echo $NGC_CLI_API_URL
canary
cat config_folder/config
open config_folder
ngc registry model list '*modulus_cht_pinn_mlp*'
ngc registry model download-version nvidia/modulus/modulus_cht_pinn_mlp:latest --debug
ngc registry model download-version nvidia/modulus/modulus_cht_pinn_mlp:latest
pr git commit -a --amend
git push -f
rg create_prog nn/
rg create_transf nn/
rg '__enter__' nn/
git pull
git br -d feat/pym/list-templates 
git sw -
git rebase main
stg
ngc registry image list --column hasSignedTag --signed
ngc registry image list -help
pri
ngc registry image list --column signed --signed
rg 'class RepositorySearch' nn/
ngc registry image list --column signed --signed --debug
ngc registry image list --column signed --signed 
ngc registry image list i'*pyg*' --column signed 
ngc registry image list '*pyg*' --column signed 
ngc registry image list --help
ngc registry image list '*pyg*' --signed
ngc registry image list '*pyg*' --column signed
ngc registry image list '*pyg*' 
ngc registry image list 
git sw -c fix/image/tag-status
gs
git commit -a -m "fix(image): Correct tag status display"
git diffn main
git diff
git diff main
ngc registry image list '*test*'
export NGC_CLI_PROGRESS_BAR_STYLE=NORMAL
ngc registry image info nvidia/mn-sc-test
ngc registry image download-version nvidia/busyboxtest:v1
ngc registry model list '*test*'
ngc registry model list '*edtest*'
ngc registry model list '*ed_test*'
ngc registry model info nvidia/published_test
ngc registry model download-version nvidia/published_test:88
ngc registry model download-version nvidia/published_test:88 --debug
open .
h upload_
ngc regsitry resource list '*edtest*'
ngc registry resource list '*test*'
h 'resource create'
ngc registry resource create nvidia/test_team/ed_demo --application Classification --format dummy --framework TensorFlow --precision FP16 --short-desc "demo"
ngc registry resource remove -y nvidia/test_team/ed_demo:v2
export NGC_CLI_PROGRESS_BAR_STYLE=DEFAULT
rg '\bNORMAL\b
rg '\bNORMAL\b' nn/
prp junk.py 
ngc registry resource remove -y nvidia/test_team/ed_demo:v2 
h down
ngc registry model download-version nvidia/published_test:88 
ngc registry resource list '*edtest*'
ngc registry resource remove -y nvidia/test_team/ed_demo:v1
ngc registry resource upload-version nvidia/test_team/ed_demo:v2 --source upload_test
ngc registry resource upload-version nvidia/test_team/ed_demo:v1 --source upload_test
export NGC_CLI_PROGRESS_BAR_STYLE=PLAIN
export NGC_CLI_PROGRESS_BAR_STYLE=ASCII
unset NGC_CLI_PROGRESS_BAR_STYLE
export NGC_CLI_PROGRESS_BAR_STYLE=NONE
ngc registry resource download-version nvidia/test_team/ed_demo:v1
rg get_task_by_description nn/
rg get_task_by_description 
pr black --preview nn/ tests/
rg 'add_task' nn/
git ls
pr git commit -a --amend --no-edit 
git sw main
git brs
git reset --hard
git sw feat/progbar 
prt tests/unit/transfer/test_http_uploader.py::test_under_upload_directory
poetry run tox --parallel auto > OUT
rg set_trace 
screen -dr CLI
poetry run tox --parallel auto > OUT
rg set_trace 
screen -dr CLI
cdn
export NGC_CLI_RICH_OUTPUT=1
export NGC_CLI_PROGRESS_BAR_STYLE=ASCII
export NGC_CLI_PROGRESS_BAR_STYLE=NONE
ngc registry resource download-version nvidia/test_team/ed_demo:v1
rg set_trace 
cdn
poetry run tox -e pylint
poetry run tox --parallel auto > OUT
pr git commit -a --amend --no-edit 
unset NGC_CLI_PROGRESS_BAR_STYLE
ngc registry resource info nvidia/test_team/ed_demo
export NGC_CLI_RICH_OUTPUT=1
ngc registry resource download-version nvidia/test_team/ed_demo:v1
ngc registry resource download-version nvidia/test_team/ed_demo:v1
cdn
ngc registry image list '*pyg*' 
pri
export NGC_CLI_PROGRESS_BAR_STYLE=DEFAULT
rg '\bNORMAL\b
rg '\bNORMAL\b' nn/
prp junk.py 
ngc registry resource remove -y nvidia/test_team/ed_demo:v2 
h down
ngc registry model download-version nvidia/published_test:88 
ngc registry resource list '*edtest*'
ngc registry resource remove -y nvidia/test_team/ed_demo:v1
ngc registry resource upload-version nvidia/test_team/ed_demo:v2 --source upload_test
ngc registry resource upload-version nvidia/test_team/ed_demo:v1 --source upload_test
export NGC_CLI_PROGRESS_BAR_STYLE=PLAIN
export NGC_CLI_PROGRESS_BAR_STYLE=ASCII
rg get_task_by_description nn/
rg get_task_by_description 
rg 'add_task' nn/
git reset --hard
git sw feat/progbar 
prt tests/unit/transfer/test_http_uploader.py::test_under_upload_directory
rg set_trace 
cdn
export NGC_CLI_PROGRESS_BAR_STYLE=NONE
ngc registry resource download-version nvidia/test_team/ed_demo:v1
prt tests/unit/test_nvPrettyPrint.py::test_add_task
prt tests/unit/test_nvPrettyPrint.py
prt tests/unit/test_nvPrettyPrint.py::test_create_transfer_progress_bar
prt -x tests/unit/test_nvPrettyPrint.py::test_create_transfer_progress_bar
prt -x tests/unit/test_nvPrettyPrint.py
pr black --preview nn/ tests/
pr isort tests/unit/test_nvPrettyPrint.py
pr isort tests/unit/
pr git commit -a --amend
git br -m fix/progbar
git push -u origin fix/progbar 
git push -f
git sw -
git sw fix/image/tag-status 
git rebase main
h list
git diffn main
prt tests/unit/printer/test_image.py 
prt -x tests/unit/printer/test_image.py 
prt -x tests/unit/printer/test_image.py::tests/unit/printer/test_image.py::test_image_output_signed_tags
pri
ngc registry image list '*pyg*' --column signed
prt -x tests/unit/printer/test_image.py::test_image_output_signed_tags
poetry show | grep google
poetry show | grep rpc
poetry run tox --parallel auto > OUT
git ls
pr git commit -a --amend --no-edit 
git push -u origin fix/image/tag-status 
export NGC_CLI_RICH_OUTPUT=1
set | rg NGC
unset NGC_CLI_PROGRESS_BAR_STYLE
git sw main
ngc registry image list '*nginx*' --column signed
open config_folder
ngc registry image info nvidia/test/kku-image:0.0.5
ngc registry image publish nvidia/test-team/kku-image:0.0.5 --source nvidia/test/kku-image:0.0.5 --public --discoverable --allow-guest --sign --debug
prod
stg
git pull
git brs
git br -d fix/image/tag-status
wc -l dict_wordle.txt 
cd ~/projects/ngc-cli; vim .
vim .
fg
wc -l dict_wordle.txt 
sudo su -
cd ~/projects/ngcsdk
gs
git sw -c openapi
ll -rt ~/dls/
mv ~/dls/openapi.json ./irc.json
poetry add openapi3
pri
cd ~/projects/ngcsdk; vim .
rg set_trace 
ssh dodata
screen -dr CLI
screen -dr SDK
pr git commit -a --amend --no-edit 
unset NGC_CLI_PROGRESS_BAR_STYLE
ngc registry resource info nvidia/test_team/ed_demo
cdn
export NGC_CLI_RICH_OUTPUT=1
export NGC_CLI_PROGRESS_BAR_STYLE=ASCII
export NGC_CLI_PROGRESS_BAR_STYLE=NONE
ngc registry resource download-version nvidia/test_team/ed_demo:v1
./wordle.py '....E' 'e' star
./wordle.py '.L.e[NE]' 'ln' starod
vim dict_wordle.txt 
wc -l dict_wordle.txt 
sudo su -
top -u
htop
screen -c .SDK.screenrc 
cd projects/elastic_irc/
vim irc_search.py 
vim irc_total.py 
mss
killall ssh
ping -c 3 google.com
ssh dodata
ssh leafe.com
prp irc_total.py 
cd projects/mailman_held_messages/
clear && prp xasync.py 
git push 
git push -u leafe main
git br -d fix/telemetryport 
cd ~/projects/ngcsdk; vim .
cd projects/mailman_held_messages/
clear && prp xasync.py 
screen -ls
screen -dr SDK
pfctl
brew search colima
./wordle.py 'S.as.' '' tonechr
./wordle.py 'S.as.' 's' tonechr
ldd $(which bash)
./wordle.py 'S....' 's' tone
./wordle.py 'b.RsA' 'ra' toneu
./wordle.py '..O..' 'o' stne
./wordle.py '.OO.L' 'ol' stnerya
vim
./wordle.py '.t.RE' 're' sa
./wordle.py '.t.er' '' saoh
./wordle.py '..A.E.' 'ae' str
./wordle.py '..A.E' 'ae' str
./wordle.py 'LaAeE' 'l' strdn
./wordle.py 's...e' '' tar
./wordle.py 's.ine' '' tarp
./wordle.py '..ARE' 'are' st
./wordle.py 'rEA[RA]E' 'ae' stgl
./wordle.py 's....' '' tare
./wordle.py 'sP.I.' 'pi' tareol
./wordle.py 'S...e' 's' art
./wordle.py 'Souse' '' artl
./wordle.py '.L.e[NE]' 'ln' starod
./wordle.py '..A.e' 'a' str
./wordle.py 'a.[GA]le' 'g' strn
scanalias recre
addalias recreation-gov
addalias recreation.gov
./wordle.py '..A..' 'a' stre
./wordle.py '.aA.y' '' stremnl
./wordle.py '.aA.y' '' stremnlbwd
./wordle.py '.aA.y' '' stremnlbwdhp
ll lot*
python lotto_play.py 
crn -l
crontab -l
launchctl -l
launchctl list
launchctl list | grep lotto
cd projects/
fd lotto
workon basic 
vim tools/lotto_check.py 
python tools/lotto_check.py 
deactivate 
curl -X OPTIONS https://leafe.com
curl -X OPTIONS https://google.com
curl -X OPTIONS https://yahoo.com
cd ~/Desktop/
ll -rt
mv am spam
b
./wordle.py '.....' '' stare
./wordle.py 'D.I..' 'di' stareoly
fd referral
rg linkedin dls/
rg linkedin Documents/
python month.py 
./wordle.py 'STa.E' 'ste' r
ipython
./wordle.py '....E' 'e' star
./wordle.py '...E[EN]' 'en' starold
./wordle.py 'e.I[EN][EN]' 'in' staroldyg
killall ssh
./wordle.py 
./wordle.py 'sT...' 't' are
./wordle.py 'sTout' '' areh
ess
scanalias pyth
scanalias psf
./wordle.py '.TARE' 'tare' s
./wordle.py 'T[TR][AE][RA]E
./wordle.py 'T[TR][AE][RA]E' tare sd
./wordle.py '[TE]a[AER][RAT][EH]' thre sd
./wordle.py '...R.' 'r' stae
./wordle.py 'cURR.' 'ur' staeio
vim dict_wordle.txt 
wc -l dict_wordle.txt 
ping -c 3 google.com
mss
pkill iTerm
./wordle.py 'S.A..' 'sa' tre
./wordle.py 'ba[AS].L' 'sl' trei
balsa
vim dict_wordle.txt 
cat dict_wordle.txt | wc -l
pkill iTerm
./wordle.py 'S.A..' 'sa' tre
./wordle.py 'ba[AS].L' 'sl' trei
balsa
vim dict_wordle.txt 
cat dict_wordle.txt | wc -l
./wordle.py 's....' '' tare
./wordle.py 'sP.I.' 'pi' tareol
ping -c 3 google.com
mss
./wordle.py 'S...e' 's' art
./wordle.py 'Souse' '' artl
./wordle.py '....E' 'e' star
./wordle.py '.L.e[NE]' 'ln' starod
vim dict_wordle.txt 
wc -l dict_wordle.txt 
sudo su -
cd ~
cd projects/
mkdir jsonopen
cd jsonopen/
poetry init
cp -R ~/projects/ngc-cli/ngc-cas .
ll ngc-cas/
ll ngc-cas/sa
ll ngc-cas/src/
poetry add jsonschema-to-openapi
poetry add --help
poetry add -D ipython
poetry add -D pytest-pudb
poetry add pyyaml
cp -R ~/projects/ngc-cli/ngc-registry/ .
ll 
mkdir ngc-registry
mv src/ settings.xml  pom.xml Jenkinsfile ngc-registry/
ll ngc-registry/src/
fd chart
fd repos
poetry remove jsonschema-to-openapi
poetry add jsonschema
cdn
cd ngc-registry/
cd src
ll
poetry show
cd -
d ~/projects/jsonopen/
cd ~/projects/jsonopen/
pri
poetry install ipython
poetry add ipython
poetry run which ipython
poetry run ipython
cd ; vim ~
sudo su -
cd src
ll
poetry show
cd -
d ~/projects/jsonopen/
cd ~/projects/jsonopen/
poetry install ipython
poetry add ipython
poetry run which ipython
poetry run ipython
cd ; vim ~
cd ~/projects/ngc-cli
git brs
git sw -c fix/catalog
git sw fix/guest/download 
git br -d fix/catalog 
git br -D fix/catalog 
git rebase main
git diffn main
git diff main
git reset ngccli/transfer/async_download.py
pro
prod
stg
open config_folder
ngc registry resource list '*test*'
export NGC_CLI_RICH_OUTPUT=1
ngc registry resource list -h
ngc registry resource info nvidia/test_admin_org_res_0419
ngc registry resource download-version nvidia/test_admin_org_res_0419
git diff
git reflog
git reflog | rg guest
git diff 7bb4c
git diff 7bb4c868
git diff 7bb4c868 -- ngccli/transfer/async_download.py
ngc registry resource download-version nvidia/test_admin_org_res_0419:312 --debug
ngc registry resource list '*test*' --column size
ngc registry resource info nvidia/gmail_test_3
ngc registry model info nvidia/published_test
ngc registry model download-versionnvidia/published_test:88 --debug
ngc registry model download-version nvidia/published_test:88 --debug
ngc registry resource info  nvidia/gmail_test_3:3
ngc registry resource download-version nvidia/gmail_test_3:3
set | grep NGC
ngc registry resource download-version nvidia/gmail_test_3:3 --debug
ngc registry resource download-version nvidia/gmail_test_3:3 
h down
ngc registry model download-version nvidia/published_test:88 
ngc registry model list '*test*' --column size
ngc registry model info nvidia/test_admin_org_model_0314
ngc registry model info nvidia/test_admin_org_model_0314:123
ngc registry model download-version nvidia/test_admin_org_model_0314:123
ngc registry model info nvidia/published_test:88
ngc registry model download-version nvidia/published_test:88  --debug
ngc registry model info nvidia/published_test:88 --format_type json
ngc registry model info nvidia/published_test --format_type json
prt tests/unit/api/test_models.py::test_get_direct_download_file_URL
prt tests/unit/api/test_models.py
prt tests/unit/api/test_models.py::test_get_guestdirect_download_file_URL
prt tests/unit/api/test_models.py::test_get_guest_direct_download_file_URL
pri
prt tests/unit/api/test_models.py::test_guest_get_direct_download_file_URL
prt tests/unit/api/test_resources.py::test_guest_get_direct_download_file_URL
pr black --preview nn/ tests/
poetry run tox --parallel auto > OUT
poetry run tox --parallel auto > OUT
vim 
killall ssh
mss
cd projects/
fd lotto
workon basic 
python tools/lotto_check.py 
cd projects/mailman_held_messages/
clear && prp xasync.py 
./wordle.py 'T[TR][AE][RA]E
./wordle.py 'T[TR][AE][RA]E' tare sd
./wordle.py '[TE]a[AER][RAT][EH]' thre sd
./wordle.py 'cURR.' 'ur' staeio
wc -l dict_wordle.txt 
pkill iTerm
./wordle.py 'S.A..' 'sa' tre
./wordle.py 'ba[AS].L' 'sl' trei
balsa
pkill iTerm
./wordle.py 'S.A..' 'sa' tre
./wordle.py 'ba[AS].L' 'sl' trei
balsa
scanalias home
./wordle.py '..a..' '' stre
./wordle.py '..aN.' 'n' streclk
ssh kitchenpi
scanalias eye
./wordle.py '...R.' 'r' stae
./wordle.py '.ron.' '' staeiy
scanalias dent
scanalias 1d
al 2020 7
cal 2020
cal 7 2020
./wordle.py 
./wordle.py '.....' '' stare
./wordle.py '...L.' 'l' staredoiy
vim dict_wordle.txt 
cat dict_wordle.txt | wc -l
ping -c 3 google.com
mss
vim dict_wordle.txt 
cat dict_wordle.txt | wc -l
screen -dr
screen -c .SDK.screenrc 
screen -ls
screen -c .CLI.screenrc 
mss
screen -dr CLI
pgrep iterm
pgrep -i iterm
pkill -i iterm
screen -ls
screen -ls
cdn 
stg
prod
ngc registry image info nv-drive-internal/drivesw-rel/avflash_3.0
ping -c 3 google.com
tail -n 100 -f Desktop/do_doc.log 
cdn 
rg SERVICE_MAP nn/
